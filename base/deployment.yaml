apiVersion: apps/v1
kind: Deployment
metadata:
  name: "dashboard-svc"
  labels:
    app: dashboard-svc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dashboard-svc
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "100%"
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: "dashboard-svc"
    spec:
      imagePullSecrets:
        - name: wahedtech-dockercloud-cred
      volumes:
        - name: feature-flags-volume
          configMap:
            name: feature-flags-config
            items:
              - key: feature-flags.yaml
                path: feature-flags.yaml
      containers:
        - name: "dashboard-svc"
          image: "wahedtech/dashboard-svc"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: feature-flags-volume
              mountPath: /conf/k8s/feature-flags
          ports:
            - containerPort: 8080
          env:
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: env
            - name: I18NCLIENT_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: redis.url
            - name: I18NCLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
                  optional: true
            - name: REDIS_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: redis.url
            - name: JAEGER_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: jaeger.address
            - name: JAEGER_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: jaeger.disabled
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
                  optional: true
            - name: COGNITO_REGION
              valueFrom:
                secretKeyRef:
                  key: region
                  name: cognito-dashboard
            - name: COGNITO_POOLID
              valueFrom:
                secretKeyRef:
                  key: poolid
                  name: cognito-dashboard
            - name: COGNITO_CLIENTID
              valueFrom:
                secretKeyRef:
                  key: clientid
                  name: cognito-dashboard
            - name: ONFIDO_APITOKEN
              valueFrom:
                secretKeyRef:
                  name: onfido
                  key: apitoken
            - name: KAFKA_BOOTSTRAPSERVERS
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: kafka.bootstrap.servers
            - name: KYCESCLIENT_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: kyc-service-config
                  key: elastic.url
            - name: KYCESCLIENT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: es
            - name: KYCESCLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: es
            - name: DASHBOARDESCLIENT_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: dashboard-service-config
                  key: elastic.url
            - name: DASHBOARDESCLIENT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: es
            - name: DASHBOARDESCLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: es
            - name: APP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dashboard-service-config
                  key: password
            - name: WEALTHKERNEL_ENCRYPTSECRET
              valueFrom:
                secretKeyRef:
                  name: dashboard-service-config
                  key: encryptSecret
            - name: CRYPT_HOST
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: crypt.host
            - name: CRYPT_PORT
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: crypt.port
            - name: S3_REGION
              valueFrom:
                configMapKeyRef:
                  key: s3.region
                  name: dashboard-service-config
      initContainers:
        - name: migratedb-up
          image: wahedtech/dashboard-svc
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: feature-flags-volume
              mountPath: /conf/k8s/feature-flags
          command: ["/bin/app", "migratedb", "up"]
          env:
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: env
            - name: DASHBOARDESCLIENT_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: dashboard-service-config
                  key: elastic.url
            - name: DASHBOARDESCLIENT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: es
            - name: DASHBOARDESCLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: es
            - name: KYCESCLIENT_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: es
            - name: KYCESCLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: es
